### 🩺 시스템 관리 및 에러 테스트 파일
### Exhibition-Artwork-Service System & Error Testing
### 💡 시스템 상태 확인과 다양한 에러 상황을 테스트할 수 있습니다.

################################################################################
### 🩺 시스템 관리 (SYSTEM)
################################################################################

### [시스템] 1. 헬스체크
### 💡 애플리케이션이 정상 작동하는지 확인
GET http://localhost:8080/actuator/health

### [시스템] 2. 애플리케이션 정보
### 💡 애플리케이션 버전, 빌드 정보 등을 확인
GET http://localhost:8080/actuator/info

### [시스템] 3. 📋 전시회 ID 목록 (간편 조회)
### 💡 ID와 제목을 한눈에 보고 복사하여 다른 API에서 사용하세요
GET http://localhost:8080/api/exhibitions

### [시스템] 4. 📋 작품 ID 목록 (간편 조회)  
### 💡 ID와 제목을 한눈에 보고 복사하여 다른 API에서 사용하세요
GET http://localhost:8080/api/artworks

################################################################################
### ❌ HTTP 에러 테스트 (ERROR TESTS)
################################################################################

### [에러] 5. 잘못된 UUID 형식 - 전시회 (400 Bad Request)
### 💡 UUID가 아닌 형식의 ID로 요청
GET http://localhost:8080/api/exhibitions/invalid-uuid

### [에러] 6. 잘못된 UUID 형식 - 작품 (400 Bad Request)  
GET http://localhost:8080/api/artworks/invalid-uuid

### [에러] 7. 존재하지 않는 전시회 (404 Not Found)
### 💡 유효한 UUID 형식이지만 존재하지 않는 ID
GET http://localhost:8080/api/exhibitions/00000000-0000-0000-0000-000000000000

### [에러] 8. 존재하지 않는 작품 (404 Not Found)
GET http://localhost:8080/api/artworks/00000000-0000-0000-0000-000000000000

### [에러] 9. 존재하지 않는 전시회의 작품 조회 (빈 배열 반환)
### 💡 전시회 ID는 존재하지 않지만 에러가 아닌 빈 배열 반환
GET http://localhost:8080/api/artworks/exhibition/00000000-0000-0000-0000-000000000000

################################################################################
### ❌ 비즈니스 로직 에러 테스트
################################################################################

### [에러] 10. 존재하지 않는 전시회에 작품 생성 시도 (404 Not Found)
POST http://localhost:8080/api/admin/artworks
Content-Type: application/json

{
  "title": "테스트 작품",
  "artist": "테스트 작가",
  "era": "현대",
  "description": "존재하지 않는 전시회에 작품 생성 테스트",
  "imageUrl": "https://example.com/test.jpg",
  "exhibitionId": "00000000-0000-0000-0000-000000000000"
}

### [에러] 11. 전시회 제목 중복 생성 시도 (409 Conflict)
### 💡 먼저 위의 시스템 API로 기존 전시회 제목을 확인하세요
POST http://localhost:8080/api/admin/exhibitions
Content-Type: application/json

{
  "title": "사용자 API 테스트 전시회",
  "description": "이미 존재하는 제목으로 생성 시도",
  "startDate": "2025-01-01",
  "endDate": "2025-12-31"
}

### [에러] 12. 작품 제목 중복 생성 시도 (409 Conflict)
### 💡 먼저 위의 시스템 API로 기존 작품 제목을 확인하세요
POST http://localhost:8080/api/admin/artworks
Content-Type: application/json

{
  "title": "사용자 API 테스트 작품",
  "artist": "중복 테스트",
  "era": "테스트",
  "description": "이미 존재하는 작품 제목으로 생성 시도",
  "imageUrl": "https://example.com/duplicate-test.jpg",
  "exhibitionId": "124ecc7f-186c-474e-8f2d-925f3fffd122"
}

################################################################################
### ❌ 잘못된 데이터 형식 테스트 (Validation Errors)
################################################################################

### [에러] 13. 필수 필드 누락 - 전시회 생성 (400 Bad Request)
POST http://localhost:8080/api/admin/exhibitions
Content-Type: application/json

{
  "description": "제목이 없는 전시회",
  "startDate": "2025-01-01",
  "endDate": "2025-12-31"
}

### [에러] 14. 필수 필드 누락 - 작품 생성 (400 Bad Request)
POST http://localhost:8080/api/admin/artworks
Content-Type: application/json

{
  "artist": "작가명만 있음",
  "era": "현대",
  "exhibitionId": "124ecc7f-186c-474e-8f2d-925f3fffd122"
}

### [에러] 15. 잘못된 날짜 형식 (400 Bad Request)
POST http://localhost:8080/api/admin/exhibitions
Content-Type: application/json

{
  "title": "날짜 형식 테스트",
  "description": "잘못된 날짜 형식 테스트",
  "startDate": "2025/01/01",
  "endDate": "invalid-date"
}

################################################################################
### 🔧 HTTP 메서드 에러 테스트
################################################################################

### [에러] 16. 지원하지 않는 HTTP 메서드 (405 Method Not Allowed)
### 💡 GET만 지원하는 엔드포인트에 POST 요청
POST http://localhost:8080/api/exhibitions

### [에러] 17. 잘못된 Content-Type (415 Unsupported Media Type)  
POST http://localhost:8080/api/admin/exhibitions
Content-Type: text/plain

{
  "title": "잘못된 Content-Type 테스트"
} 